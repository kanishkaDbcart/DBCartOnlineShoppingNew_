CREATE TABLE [AspNetRoles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [AspNetUsers] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(max) NULL,
    [ProfilePicture] nvarchar(max) NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [Product] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_Product] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [AspNetUserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [AspNetUserTokens] (
    [UserId] nvarchar(450) NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
GO

CREATE INDEX [IX_AspNetRoleClaims_RoleId] ON [AspNetRoleClaims] ([RoleId]);
GO

CREATE UNIQUE INDEX [RoleNameIndex] ON [AspNetRoles] ([NormalizedName]) WHERE [NormalizedName] IS NOT NULL;
GO

CREATE INDEX [IX_AspNetUserClaims_UserId] ON [AspNetUserClaims] ([UserId]);
GO

CREATE INDEX [IX_AspNetUserLogins_UserId] ON [AspNetUserLogins] ([UserId]);
GO

CREATE INDEX [IX_AspNetUserRoles_RoleId] ON [AspNetUserRoles] ([RoleId]);
GO

CREATE INDEX [EmailIndex] ON [AspNetUsers] ([NormalizedEmail]);
GO

CREATE UNIQUE INDEX [UserNameIndex] ON [AspNetUsers] ([NormalizedUserName]) WHERE [NormalizedUserName] IS NOT NULL;
GO




CREATE TABLE  [dbo].[tblUser] (
    [userId] int NOT NULL Identity(1,1),
    [userName] varchar(255) NOT NULL,
    [email] varchar(255) NOT NULL,
    [password] varchar(255) NOT NULL,
	[Address]  varchar(255) NULL,
    [status] smallint NOT NULL,
    [createdAt] datetime2 NOT NULL,
    [updatedAt] datetime2 NULL,
    CONSTRAINT [PK_tblUser] PRIMARY KEY ([userId])
 );
GO






Create  TABLE [dbo].[tblUnit]
(
	[unitId]  int NOT NULL   Identity(1,1),
	[unitName] varchar(100) NOT NULL,
	[description] varchar (250) NULL,
	[status] smallint NOT NULL,
    [createdAt] datetime NOT NULL,
    [updatedAt] datetime  NULL,
	[createdBy] int NOT NULL,
	[updatedBy] int NULL,
     CONSTRAINT [PK_tblUnit] PRIMARY KEY ([unitId]),
   	 CONSTRAINT [FK_tblUnit_tblUser_createdBy] FOREIGN KEY ([createdBy]) REFERENCES [dbo].[tblUser] ([userId]),
     CONSTRAINT [FK_tblUnit_tblUser_updatedBy] FOREIGN KEY ([updatedBy]) REFERENCES [dbo].[tblUser] ([userId])
);



Create  TABLE [dbo].[tblProduct]
(
	[productId] int NOT NULL   Identity(1,1),
	[productName] varchar(100) NOT NULL,
	[productCode] varchar(50)  NULL,
	[unitId] int NOT NULL,
	[rate] decimal NOT NULL,
	[image]  varchar(500) NOT NULL,
	[description] varchar (250) NULL,
	[status] smallint NOT NULL,
    [createdAt] datetime NOT NULL,
    [updatedAt] datetime  NULL,
	[createdBy] int NOT NULL,
	[updatedBy] int NULL,
    CONSTRAINT [PK_tblProduct] PRIMARY KEY ([productId]),
   	CONSTRAINT [FK_tblProduct_tblUser_createdBy] FOREIGN KEY ([createdBy]) REFERENCES [dbo].[tblUser] ([userId]),
    CONSTRAINT [FK_tblProduct_tblUser_updatedBy] FOREIGN KEY ([updatedBy]) REFERENCES [dbo].[tblUser] ([userId]),
	CONSTRAINT [FK_tblProduct_tblUnit_unitId] FOREIGN KEY ([unitId]) REFERENCES [dbo].[tblUnit] ([unitId])
);

CREATE TABLE [dbo].[tblInventory](
	[inventoryId] int Identity(1,1) NOT NULL,
	[productId] int NULL,
	[quantity] decimal(18, 2) NOT NULL,
	[status] smallint NOT NULL,
	[createdAt] datetime2(7) NOT NULL,
	[updatedAt] datetime2(7) NULL,
	[createdBy] int NOT NULL,
	[updatedBy] int NULL,
	CONSTRAINT [PK_tblInventory] PRIMARY KEY ([inventoryId]),
    CONSTRAINT [FK_tblInventory_tblProduct_productId] FOREIGN KEY ([productId]) REFERENCES [dbo].[tblProduct] ([productId]),
    CONSTRAINT [FK_tblInventory_tblUser_createdBy] FOREIGN KEY ([createdBy]) REFERENCES [dbo].[tblUser] ([userId]),
	CONSTRAINT [FK_tblInventory_tblUser_updatedBy] FOREIGN KEY ([updatedBy]) REFERENCES [dbo].[tblUser] ([userId])
);  


CREATE TABLE [dbo].[tblCart](
	[cartId] int Identity(1,1) NOT NULL,
	[productId] int NULL,
	[quantity] decimal(18, 2) NOT NULL,
	[rate] decimal NOT NULL,
	[status] smallint NOT NULL,
	[description] varchar (250) NULL,
	[createdAt] datetime2(7) NOT NULL,
	[updatedAt] datetime2(7) NULL,
	[createdBy] int NOT NULL,
	[updatedBy] int NULL,
	CONSTRAINT [PK_tblCart] PRIMARY KEY ([cartId]),
    CONSTRAINT [FK_tblCart_tblProduct_productId] FOREIGN KEY ([productId]) REFERENCES [dbo].[tblProduct] ([productId]),
    CONSTRAINT [FK_tblCart_tblUser_createdBy] FOREIGN KEY ([createdBy]) REFERENCES [dbo].[tblUser] ([userId]),
	CONSTRAINT [FK_tblCart_tblUser_updatedBy] FOREIGN KEY ([updatedBy]) REFERENCES [dbo].[tblUser] ([userId])
); 





CREATE TABLE [dbo].[tblWishList](
	[wishListId] int Identity(1,1) NOT NULL,
	[productId] int NULL,
    [status] smallint NOT NULL,
    [createdAt] datetime2(7) NOT NULL,
	[updatedAt] datetime2(7) NULL,
	[createdBy] int NOT NULL,
	[updatedBy] int NULL,
	CONSTRAINT [PK_tblWishList] PRIMARY KEY ([wishListId]),
	CONSTRAINT [FK_tblWishList_tblproduct_tblproductId] FOREIGN KEY ([productId]) REFERENCES [dbo].[tblproduct] ([productId]),
    CONSTRAINT [FK_tblWishList_tblUser_createdBy] FOREIGN KEY ([createdBy]) REFERENCES [dbo].[tblUser] ([userId]),
	CONSTRAINT [FK_tblWishList_tblUser_updatedBy] FOREIGN KEY ([updatedBy]) REFERENCES [dbo].[tblUser] ([userId])
); 



INSERT INTO [dbo].tblUser(userName,email,password,status,createdAt)
values('Admin','admin@dbcartindia.com','i6QdCs8CLRTftdleN4g0NA==',2,GETDATE());


INSERT INTO [dbo].tblUnit(unitName,description,status,createdAt,createdBy)
values('Pices','Pices',2,GETDATE(),1);

SET Identity_Insert [dbo].tblProduct ON
INSERT INTO [dbo].tblProduct(productId,productName,productCode,unitId,rate,image,description,status,createdAt,createdBy)
values(1,'Ac','PRO0001',1,41000,'Ac.png','AC',2,GETDATE(),1),
      (2,'AirCooler','PRO0002',1,18000,'AirCooler.png','AirCooler',2,GETDATE(),1),
	  (3,'Computer','PRO0003',1,20000,'Computer.png','Computer',2,GETDATE(),1),
	  (4,'Nikon camera','PRO0004',1,19000,'Nikon camera.png','Nikon camera',2,GETDATE(),1),
	  (5,'samsung mobile','PRO0005',1,9999,'samsung mobile.png','samsung mobile',2,GETDATE(),1),
	  (6,'Sony Camera','PRO0006',1,100000,'Sony Camera.png','Sony Camera',2,GETDATE(),1),
	  (7,'computer-keyboard-Mouse','PRO0007',1,1000,'computer-keyboard-Mouse.png','computer-keyboard-Mouse',2,GETDATE(),1),
	  (8,'drone','PRO0008',1,3000,'drone.png','drone',2,GETDATE(),1),
	  (9,'energy','PRO0009',1,4000,'energy.png','energy',2,GETDATE(),1),
	  (10,'headphones (2)','PRO0010',1,4000,'headphones (2).png','headphones (2)',2,GETDATE(),1),
	  (11,'headphones','PRO0011',1,4200,'headphones.png','headphones',2,GETDATE(),1),
	  (12,'microphone','PRO0012',1,4500,'microphone.png','microphone',2,GETDATE(),1),
	  (13,'monitor-apple','PRO0013',1,64500,'monitor-apple.png','monitor-apple',2,GETDATE(),1),
	  (14,'mouse','PRO0014',1,2300,'mouse.png','mouse',2,GETDATE(),1),
	  (15,'printer','PRO0015',1,23400,'printer.png','printer',2,GETDATE(),1),
	  (16,'radio','PRO0016',1,23400,'radio.png','radio',2,GETDATE(),1),
	  (17,'Sandisk usb','PRO0017',1,400,'Sandisk usb.png','Sandisk usb',2,GETDATE(),1),
	  (18,'server','PRO0018',1,145400,'server.png','server',2,GETDATE(),1),
	  (19,'Solar energy','PRO0019',1,15400,'Solar energy.png','Solar energy',2,GETDATE(),1),
	  (20,'tablet','PRO0020',1,13400,'tablet.png','tablet',2,GETDATE(),1),
	  (21,'technology','PRO0021',1,13400,'technology.png','technology',2,GETDATE(),1),
	  (22,'telephone','PRO0022',1,8400,'telephone.png','telephone',2,GETDATE(),1),
	  (23,'web-camera','PRO0023',1,18400,'web-camera.png','web-camera',2,GETDATE(),1),
	  (24,'Naruto','PRO0024',1,100000,'Naruto.jpeg','Naruto',2,GETDATE(),1)
SET Identity_Insert [dbo].tblProduct OFF



SET Identity_Insert [dbo].tblInventory ON
INSERT INTO [dbo].[tblInventory](inventoryId,productId,quantity,status,createdAt,createdBy)
Values(1,1,10,2,GETDATE(),1),
      (2,2,10,2,GETDATE(),1),
	  (3,3,10,2,GETDATE(),1),
	  (4,4,10,2,GETDATE(),1),
	  (5,5,10,2,GETDATE(),1),
	  (6,6,10,2,GETDATE(),1),
	  (7,7,60,2,GETDATE(),1),
	  (8,8,101,2,GETDATE(),1),
	  (9,9,10,2,GETDATE(),1),
	  (10,10,10,2,GETDATE(),1),
	  (11,11,10,2,GETDATE(),1),
	  (12,12,10,2,GETDATE(),1),
	  (13,13,10,2,GETDATE(),1),
	  (14,14,10,2,GETDATE(),1),
	  (15,15,10,2,GETDATE(),1),
	  (16,16,10,2,GETDATE(),1),
	  (17,17,10,2,GETDATE(),1),
	  (18,18,10,2,GETDATE(),1),
	  (19,19,10,2,GETDATE(),1),
	  (20,20,10,2,GETDATE(),1),
	  (21,21,10,2,GETDATE(),1),
	  (22,22,10,2,GETDATE(),1),
	  (23,23,10,2,GETDATE(),1),
	  (24,24,10,2,GETDATE(),1)
SET Identity_Insert [dbo].tblInventory OFF







CREATE TABLE [dbo].[tblBuyNow](
	[buyNowId] int Identity(1,1) NOT NULL,
	[userId] int NOT NULL,
	[productId] int NOT NULL,
    [payementTypes] int NOT NULL,
	[quantity] decimal NOT NULL,
	[rate] decimal NOT NULL,
	[totalAmount] decimal NOT NULL,
    [status] smallint NOT NULL,
    [createdAt] datetime2(7) NOT NULL,
	[updatedAt] datetime2(7) NULL,
	[createdBy] int NOT NULL,
	[updatedBy] int NULL,
	CONSTRAINT [PK_tblBuyNow] PRIMARY KEY ([buyNowId]),
    CONSTRAINT [FK_tblBuyNow_tblUser_createdBy] FOREIGN KEY ([createdBy]) REFERENCES [dbo].[tblUser] ([userId]),
	CONSTRAINT [FK_tblBuyNow_tblUser_updatedBy] FOREIGN KEY ([updatedBy]) REFERENCES [dbo].[tblUser] ([userId]),
	CONSTRAINT [FK_tblBuyNow_tblproduct_productId] FOREIGN KEY ([productId]) REFERENCES [dbo].[tblproduct] ([productId])); 
 	

CREATE TABLE [dbo].[tblPurchase](
	[PurchaseId] int IDENTITY(1,1) NOT NULL,
	[buyNowId] int NOT NULL,
    [status] smallint NOT NULL,
    [createdAt] datetime2(7) NOT NULL,
	[updatedAt] datetime2(7) NULL,
	[createdBy] int NOT NULL,
	[updatedBy] int NULL,
	CONSTRAINT [PK_tblPurchase] PRIMARY KEY ([PurchaseId]),
	CONSTRAINT [FK_tblPurchase_tblbuyNow_buyNowId] FOREIGN KEY ([buyNowId]) REFERENCES [dbo].[tblBuyNow] ([buyNowId]),
    CONSTRAINT [FK_tblPurchase_tblUser_createdBy] FOREIGN KEY ([createdBy]) REFERENCES [dbo].[tblUser] ([userId]),
	CONSTRAINT [FK_tblPurchase_tblUser_updatedBy] FOREIGN KEY ([updatedBy]) REFERENCES [dbo].[tblUser] ([userId])); 